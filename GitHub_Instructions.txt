Reference: https://gist.github.com/mindplace/b4b094157d7a3be6afd2c96370d39fad
https://git-scm.com/docs/git-add

Create and push new project to repository
_______________________________________________________________________________________________________________________________________________________________

1) Using your terminal/command line, get inside the folder where your project files are kept: cd /path/to/my/codebase
2) Check if git is already initialized: git status

3) Create README.md file -> echo "# disposable" >> README.md
4) If you get this error message: fatal: Not a git repository (or any of the parent directories): .git, that means the 
folder you are currently in is not being tracked by git. In that case, initialize git inside your project folder by typing -> 
git init

5) git add README.md

Create a remote, empty folder/repository on Github.
1) Login to your Github account.

2) At the top right of any Github page, you should see a '+' icon. Click that, then select 'New Repository'.

3) Click 'Create Repository'. !!!!!The next screen you see will be important, so don't close it.!!!!!

4) type -> git config --get remote.origin.url           --> check the github repository you are working in. 
										                    If nothing is returned your not connected to a repository
4a) type -> git remote add origin <github repo url>     --> if above returns nothing then run this and connect to
											                a repository <github repo url> = https://github.com/nalanzo2001/newtoncuff.git
												 
	If reusing a repository already used and message  = fatal: remote origin already exists.
	THEN
	type -> git remote rm origin                         --> removes the origin from the current session
	type -> git remote set-url origin <github repo url>  --> set a new origin for the current session i.e  <github repo url> = https://github.com/nalanzo2001/newtoncuff.git
	
5) git add -A (OR) git add .                             --> Stages all files in directory for checkin
5a) git reset                                            --> cancels all staged directories and files
5b) git reset <directory>/*                              --> unstages specific directory and all files
5b) git reset <directory/filename>                       --> unstages specific file

6) git commit -m "<message for commit>"                  --> commit all stages files and directories with a message
OR
6a) git commit -a                                        --> commit all stages files and directories and opens a text
														 --> file so notes can be added for commit

7) Login
	$ git config --global user.email "nalanzo2001@gmail.com"
	$ git config --global user.name "nalanzo2001"

7) git push origin main

_______________________________________________________________________________________________________________________________________________________________
Delete directoy from repository  2 = keep directory locally
_______________________________________________________________________________________________________________________________________________________________

1) git rm -r <directory_name>

2) git rm -r --cached <directory_name>

_______________________________________________________________________________________________________________________________________________________________
Update file and push to repository
_______________________________________________________________________________________________________________________________________________________________

1) Update file to be updated

2) git commit -a -m "<message for commit>"

3) git push origin main

_______________________________________________________________________________________________________________________________________________________________
Switch repositories
_______________________________________________________________________________________________________________________________________________________________

git remote set-url origin <repository_to_switch_to>